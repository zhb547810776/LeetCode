实现IndexOf方法
C#代码如下：
public class Solution {
    public int StrStr(string haystack, string needle) {
        int longLen = haystack.Length;
        int shortLen = needle.Length;
		//若needle为空，返回0  这与C语言的 strstr() 以及 Java的 indexOf() 定义相符。
        for(int i=0;i<=longLen-shortLen;i++){
            if(haystack.Substring(i,shortLen).Equals(needle)){
                return i;
            }
        }

        return -1;
    }
}

还有看到不使用Substring方法的代码
java代码如下：
class Solution {
    public int strStr(String haystack, String needle) {
    int m = haystack.length(), n = needle.length();
    if (n == 0) return 0;

    for (int i = 0; i <= m - n; i++) {
        for (int j = 0; j < n; j++) {
            if (haystack.charAt(i + j) != needle.charAt(j)) break;
            if (j == n - 1) return i;
        }
    }

    return -1;
    }
}

看了看官方说的KMP算法   脑袋有点大，下次再说 呜呜呜 我好弱