基于  数组——560. 和为K的子数组  的题目
同时与363题不能说十分相似  只能说一模一样
我们可以将二维数组每一列的数相加起来
即定义一个一位数组nums[marrix[0].Length]
然后令nums[i] = nums[0][i] + nums[1][i] + ...
然后可以通过560题的方法来获得此时符合题目的答案count
因此我们只需要基于此种方式来固定上边界
枚举下边界	就可以遍历完所有的矩阵了
C#代码如下：
public class Solution {
    public int NumSubmatrixSumTarget(int[][] matrix, int target) {
        int count = 0;
        for(int i=0;i<matrix.Length;i++){
            int []nums = new int[matrix[0].Length];
            for(int j=i;j<matrix.Length;j++){
                for(int z = 0;z<matrix[0].Length;z++){
                    nums[z] += matrix[j][z];
                }
                count += SubarraySum(nums,target);
            }
        }

        return count;
    }

    public int SubarraySum(int[] nums, int k) {
        int len = nums.Length;
        int pre = 0;
        Dictionary<int,int> dic = new Dictionary<int,int>();
        dic.Add(0,1);
        int count = 0;

        for(int i=0;i<len;i++){
            pre = pre + nums[i];
            if(dic.ContainsKey(pre-k)){
                count += dic[pre-k];
            }

            if(dic.ContainsKey(pre)){
                dic[pre]++;
            }else{
                dic.Add(pre,1);
            }
        }
        return count;
    }
}